{"version":3,"sources":["useEffect/cleanFunction.tsx","useEffect/simple.tsx","useEffect/onlyOnce.tsx","useEffect/index.tsx","useContext/useContext.tsx","useCallback/ButtonDemo.tsx","useCallback/ButtonDemo3.tsx","useCallback/ButtonDemo2.tsx","useCallback/useCallback.tsx","useRef/useRef.tsx","useImperativeHandle/useImperativeHandle.tsx","useLayoutEffect/useLayoutEffect.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserEffect","useState","count","setCount","useEffect","timeId","setInterval","console","log","clearInterval","onClick","number","setNumber","UseEffect","index","setIndex","style","width","margin","display","justifyContent","type","ButtonDemo","memo","addNote","names","Notes","notes","setNotes","name","useCallback","n","useMemo","map","note","RefComponent","stateNumber","numRef","useRef","current","InputEl","forwardRef","props","ref","inputEl","useImperativeHandle","value","getType","focus","InputWithFocusButton","height","UseLayoutEffect","state","setState","i","BasicExample","data","setData","fetch","then","res","text","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba10f876.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nconst UserEffect = ()=>{\n  let [count,setCount] = useState(0);\n  useEffect(()=>{\n   const timeId = setInterval(()=>{\n      console.log('enter')\n    },3000);\n   return ()=>{\n     console.log('out');\n     clearInterval(timeId)\n   }\n  })\n  return (<div>\n    <p>clean function</p>\n    <button onClick={()=>setCount(++count)}>click {count} times</button>\n  </div>)\n}\nexport default UserEffect;\n","import React, {useEffect, useState} from \"react\";\n\nconst UserEffect = ()=>{\n  let [count,setCount] = useState(0);\n  let [number,setNumber] = useState(0);\n  useEffect(()=>{\n    console.log('simple');\n  });\n  return (\n      <div>\n        <p>simple</p>\n        <button onClick={()=>setCount(++count)}>click {count} times</button>\n        <button onClick={()=>setNumber(++number)}>click {number}</button>\n      </div>\n  )\n}\nexport default UserEffect;\n","import React, {useEffect, useState} from \"react\";\n\nconst UserEffect = ()=>{\n  let [count,setCount] = useState(0);\n  useEffect(()=>{\n    return ()=>console.log('once ')\n  },[])\n  return (<div>\n    <p>only once</p>\n    <button onClick={()=>setCount(++count)}>click {count} times</button>\n  </div>)\n}\nexport default UserEffect;\n","import React, {useState} from \"react\";\nimport CleanFunction from './cleanFunction'\nimport Simple from './simple';\nimport OnlyOnce from './onlyOnce';\nimport { Button } from 'antd';\nconst UseEffect = ()=>{\n  const [index,setIndex]= useState(0);\n  const getComponent=()=>{\n   if (index===0){\n      return <Simple/>\n    }else if (index===1){\n      return <CleanFunction/>\n    }else {\n      return <OnlyOnce/>\n    }\n }\n  return(\n      <div style={{width:\"50%\",margin:\"0 auto\"}}>\n        <div style={{display:\"flex\",justifyContent:\"space-around\",margin:'30px'}}>\n          <Button type=\"link\" onClick={()=>setIndex(0)}>simple</Button>\n          <Button type=\"link\" onClick={()=>setIndex(1)}>cleanFunction</Button>\n          <Button type=\"link\" onClick={()=>setIndex(2)}>only Once</Button>\n        </div>\n        <div>\n          {getComponent()}\n        </div>\n\n      </div>\n  )\n}\nexport default UseEffect;\n","import React from \"react\";\n\nconst UserEffect = ()=>{\n  return (<div>use context</div>)\n}\nexport default UserEffect;\n","import React, {memo} from \"react\";\n\ntype prop = {\n  addNote: () => void\n}\nconst ButtonDemo = memo(({addNote}: prop) => {\n  console.log(\"ButtonDemo re-rendered :( \");\n  return (\n      <div>\n        <button onClick={addNote}>Add</button>\n      </div>\n  );\n});\n\nexport default ButtonDemo;\n","import React, {memo} from \"react\";\n\ntype prop = {\n  names: string;\n}\nconst ButtonDemo = ({names}: prop) => {\n  console.log(\"ButtonDemo3 have a array prop\");\n  return (\n      <div>\n        {names}\n      </div>\n  );\n}\n\nexport default ButtonDemo;\n","import React, {memo} from \"react\";\n\nconst ButtonDemo =memo(() => {\n  console.log(\"Button demo 2 \");\n  return (\n      <div>\n        hello\n      </div>\n  );\n})\n\nexport default ButtonDemo;\n","import React, {useCallback, useEffect, useMemo, useState} from \"react\";\nimport ButtonDemo from './ButtonDemo'\nimport ButtonDemoWithArray from './ButtonDemo3'\nimport ButtonDemoProp from './ButtonDemo2'\n\nconst Notes = () => {\n  const [notes, setNotes] = useState<string[]>([]);\n  let [count, setCount] = useState(0);\n\n  const [name] = useState<string>('TestChild组件');\n  const addNote = useCallback(() => {\n    const newNote = \"random\";\n    setNotes(n => [...n, newNote]);\n  }, [setNotes]);\n  // const interval = useCallback(() => {\n  //   setInterval(() => {\n  //     setCount(++count);\n  //   }, 8000)\n  // }, []);\n  // useEffect(() =>interval(),[interval]);\n  return (\n      <div>\n        <ButtonDemo addNote={addNote}/>\n        <ButtonDemoWithArray names={useMemo(() => name, [name])}/>\n        {notes.map((note, index) => (\n            <p key={index}>{note}</p>\n        ))}\n        <p>{count}</p>\n        <ButtonDemoProp/>\n      </div>\n  );\n};\n\nexport default Notes;\n","import React, { useState, useRef } from \"react\"\n\nconst RefComponent = () => {\n  const [stateNumber, setStateNumber] = useState(0)\n  const numRef = useRef(0)\n\n  function incrementAndDelayLogging() {\n    // setStateNumber(stateNumber + 1)\n    numRef.current++\n    // setTimeout(\n    //     () => alert(`state: ${stateNumber} | ref: ${numRef.current}`),\n    //     5000\n    // )\n  }\n  return (\n      <div>\n        <h1>solving closure by useRef</h1>\n        <button onClick={incrementAndDelayLogging}>alert in setTimeout</button>\n        <h4>state: {stateNumber}</h4>\n        <h4>ref: {numRef.current}</h4>\n      </div>\n  )\n}\n\nexport default RefComponent\n","import {  useRef,forwardRef,MutableRefObject,useImperativeHandle,Ref} from \"react\";\n\nconst InputEl = forwardRef((props: {}, ref: Ref<any>): JSX.Element=>{\n  const inputEl: MutableRefObject<any> = useRef();\n\n  useImperativeHandle(ref, ()=>({\n    value: (inputEl.current as HTMLInputElement).value,\n    getType: () => (inputEl.current as HTMLInputElement).type,\n    focus: () => (inputEl.current as HTMLInputElement).focus()\n  }));\n\n  return(\n      <input ref={inputEl} type=\"text\" {...props}/>\n  )\n})\n// //暴露整个input节点给父级\n// const InputEl = forwardRef((props: {}, ref: Ref<any>): JSX.Element=>{\n//   return(\n//       <input ref={ref} type=\"text\" {...props}/>\n//   )\n// });\n\n//父级\nexport default function InputWithFocusButton() {\n  const inputEl: MutableRefObject<any> = useRef(null);\n\n  function onButtonClick() {\n    inputEl.current.focus();\n    console.log(inputEl.current.height);\n  };\n  return (\n      <>\n        <InputEl ref={inputEl} />\n        <button onClick={onButtonClick}>Focus the input</button>\n      </>\n  );\n}\n","import React, {useEffect, useLayoutEffect, useState} from 'react';\n\nexport default function UseLayoutEffect() {\n  const [state, setState] = useState(\"hello world\")\n\n  useEffect(() => {\n    let i = 0;\n    while(i <= 1000000000) {\n      i++;\n    };\n    setState(\"world hello\");\n  }, []);\n\n  // useLayoutEffect(() => {\n  //   let i = 0;\n  //     while(true) {\n  //       i++;\n  //     };\n  // }, []);\n\n  return (\n      <>\n        <div>{state}</div>\n      </>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport UseEffect from './useEffect/index';\nimport UseContext from './useContext/useContext';\nimport UseCallBack from './useCallback/useCallback'\nimport Ref from './useRef/useRef'\nimport UseImperativeHandle from './useImperativeHandle/useImperativeHandle';\nimport UseLayoutEffect from './useLayoutEffect/useLayoutEffect';\nimport 'antd/dist/antd.css';\n\nexport default function BasicExample() {\n  const [data, setData] = useState<string>('');\n  useEffect(() => {\n    fetch('/api/hello')\n        .then(res => res.text()).then(data => setData(data));\n  }, [])\n  return (\n      <Router>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">UseEffect</Link>\n            </li>\n            <li>\n              <Link to=\"/useContext\">useContext</Link>\n            </li>\n            <li>\n              <Link to=\"/useRef\">useRef</Link>\n            </li>\n            <li>\n              <Link to=\"/useCallBack\">useCallBack and useMomo</Link>\n            </li>\n            <li>\n              <Link to=\"/useImperativeHandle\">useImperativeHandle</Link>\n            </li>\n            <li>\n              <Link to=\"/useLayoutEffect\">UseLayoutEffect</Link>\n            </li>\n          </ul>\n\n          <hr/>\n\n          {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n          <Switch>\n            <Route exact path=\"/\">\n              <UseEffect/>\n            </Route>\n            <Route path=\"/useContext\">\n              <UseContext/>\n            </Route>\n            <Route path=\"/useRef\">\n              <Ref/>\n            </Route>\n            <Route path=\"/useCallBack\">\n              <UseCallBack/>\n            </Route>\n            <Route path=\"/useImperativeHandle\">\n              <UseImperativeHandle/>\n            </Route>\n            <Route path=\"/useLayoutEffect\">\n              <UseLayoutEffect/>\n            </Route>\n          </Switch>\n          <p>this `{data}` come from backend</p>\n        </div>\n      </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}